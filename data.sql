-- user
create table if not exists public."user"
(
    id        varchar(50) not null
    primary key,
    role      json,
    name      varchar(50),
    email     varchar(50)
    unique,
    password  varchar(60),
    create_at date,
    update_at date,
    is_delete smallint default 0,
    is_valid  smallint default 0
    );

alter table public."user"
    owner to postgres;

-- server
create table if not exists public.server
(
    id        bigint generated by default as identity,
    name      varchar(500) not null,
    create_at date,
    update_at date,
    owner_id  bigint,
    labels    text[]
);

comment on table public.server is '服务器';

alter table public.server
    owner to postgres;

create index if not exists "Server_owner_id_index"
    on public.server (owner_id);

-- channel
create table if not exists public.channel
(
    id        bigint generated by default as identity,
    label     varchar(500),
    server_id bigint       not null,
    name      varchar(255) not null,
    create_at date,
    update_at date,
    is_mute   smallint default 0
);

comment on table public.channel is '频道';

comment on column public.channel.server_id is '服务器ID';

alter table public.channel
    owner to postgres;

create index if not exists channel_server_id_index
    on public.channel (server_id);

-- server_member
create table if not exists public.server_member
(
    id  bigint generated by default as identity
            primary key,
    user_id     varchar(50),
    user_email  varchar(50),
    user_name   varchar(255),
    server_id   bigint,
    member_name varchar(50),
    identity_id bigint
            unique,
    invite_id   bigint,
    channels    text[],
    create_at   date,
    is_delete   smallint default 0,
    is_mute     smallint default 0
);

comment on table public.server_member is '服务器成员';

comment on column public.server_member.server_id is '服务器ID';

comment on column public.server_member.invite_id is '邀请人ID';

alter table public.server_member
    owner to postgres;

create index if not exists server_member_server_id_index
    on public.server_member (server_id);

create index if not exists server_member_user_email_index
    on public.server_member (user_email);

create index if not exists server_member_user_id_index
    on public.server_member (user_id);

-- identity
create table if not exists public.identity
(
    id          bigint generated by default as identity
        primary key,
    channel_id  bigint not null,
    name        varchar(200) not null ,
    member_role varchar(50)
);

alter table public.identity
    owner to postgres;

-- member_role
create table if not exists public.member_role
(
    id          bigint generated by default as identity
        primary key,
    channel_id  bigint
        unique,
    name        varchar(100)
        unique,
    permissions text[]
);

alter table public.member_role
    owner to postgres;

-- label
create table if not exists public.label
(
    id        bigint generated by default as identity
        primary key,
    server_id bigint
        unique,
    name      varchar(100)
);

alter table public.label
    owner to postgres;

-- message
create table if not exists public.message
(
    id           bigint generated by default as identity
        primary key,
    message      text not null,
    image        varchar(200),
    video        varchar(200),
    sender_id    bigint,
    send_date    date,
    is_withdraw  smallint default 0,
    limited_time date
);

comment on column public.message.sender_id is '发送者，server_member_id';

alter table public.message
    owner to postgres;

create index if not exists message_sender_id_index
    on public.message (sender_id);


